# 服务器端口
server.port=8080
# 数据库连接配置 (通过环境变量注入)
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/risk}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:Postgres#7556}
spring.datasource.driver-class-name=org.postgresql.Driver
# Flyway 配置
spring.flyway.enabled=${SPRING_FLYWAY_ENABLED:true}
spring.flyway.baseline-on-migrate=${SPRING_FLYWAY_BASELINE_ON_MIGRATE:true}

# JPA/Hibernate 配置
# spring.jpa.hibernate.ddl-auto 已移除，由Flyway管理数据库结构
#spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:create}
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL:false}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# 开启JDBC批量处理以提升性能
spring.jpa.properties.hibernate.jdbc.batch_size=50
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

# JWT Settings
jwt.secret=${JWT_SECRET:a-very-long-and-secure-secret-key-for-jwt-token-generation-12345}
jwt.expiration-seconds=${JWT_EXPIRATION_SECONDS:7200}
# 静态资源文件路径配置，指向我们在 Dockerfile 中创建的目录
spring.web.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/,file:/app/static/
# CORS配置
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:5173,http://39.105.12.79:30946}
# 切换到旧版的 AntPathMatcher 策略以支持更灵活的路由匹配规则
#spring.mvc.pathmatch.matching-strategy=ant_path_matcher

# 文件上传配置
spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB

# 电子科大API配置
uestc.api.baseUrl=https://m1.apifoxmock.com/m1/6993655-6711929-default
uestc.api.username=admin
uestc.api.password=123456